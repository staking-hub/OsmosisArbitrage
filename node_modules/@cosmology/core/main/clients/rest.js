"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RestClient = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _axios = _interopRequireDefault(require("axios"));

var _retry = _interopRequireDefault(require("retry"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var RestClient = /*#__PURE__*/function () {
  function RestClient(_ref) {
    var url = _ref.url;
    (0, _classCallCheck2["default"])(this, RestClient);
    (0, _defineProperty2["default"])(this, "url", void 0);
    (0, _defineProperty2["default"])(this, "_clientType", void 0);
    (0, _defineProperty2["default"])(this, "instance", void 0);
    this.url = url.endsWith('/') ? url : "".concat(url, "/");
    this._clientType = 'API';
    this.instance = _axios["default"].create({
      baseURL: this.url,
      timeout: 10000,
      headers: {}
    });
  }

  (0, _createClass2["default"])(RestClient, [{
    key: "request",
    value: function request(endpoint) {
      var _this = this;

      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var operation = _retry["default"].operation({
        retries: 5,
        factor: 2,
        minTimeout: 1 * 1000,
        maxTimeout: 60 * 1000
      });

      return new Promise(function (resolve, reject) {
        operation.attempt( /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
          var response, err, _e$response, _e$response2, _e$response3, statusNum;

          return _regenerator["default"].wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.prev = 0;
                  _context.next = 3;
                  return _this.instance.get(endpoint, _objectSpread({
                    timeout: 30000
                  }, opts));

                case 3:
                  response = _context.sent;
                  _context.next = 17;
                  break;

                case 6:
                  _context.prev = 6;
                  _context.t0 = _context["catch"](0);
                  console.log("STATUS CODE: ".concat(_context.t0 === null || _context.t0 === void 0 ? void 0 : (_e$response = _context.t0.response) === null || _e$response === void 0 ? void 0 : _e$response.status));
                  console.log("STATUS TEXT: ".concat(_context.t0 === null || _context.t0 === void 0 ? void 0 : (_e$response2 = _context.t0.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.statusText));
                  console.error("".concat(_this._clientType, " response error: ").concat(_context.t0.response ? _context.t0.response.data : _context.t0));
                  statusNum = Number(_context.t0 === null || _context.t0 === void 0 ? void 0 : (_e$response3 = _context.t0.response) === null || _e$response3 === void 0 ? void 0 : _e$response3.status);

                  if (!(statusNum >= 500)) {
                    _context.next = 16;
                    break;
                  }

                  err = true;
                  _context.next = 17;
                  break;

                case 16:
                  return _context.abrupt("return", reject(_context.t0));

                case 17:
                  if (!operation.retry(err)) {
                    _context.next = 20;
                    break;
                  }

                  console.log('retrying...');
                  return _context.abrupt("return");

                case 20:
                  if (response && response.data) {
                    resolve(response.data);
                  } else {
                    reject(operation.mainError());
                  }

                case 21:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, null, [[0, 6]]);
        })));
      });
    }
  }]);
  return RestClient;
}();

exports.RestClient = RestClient;