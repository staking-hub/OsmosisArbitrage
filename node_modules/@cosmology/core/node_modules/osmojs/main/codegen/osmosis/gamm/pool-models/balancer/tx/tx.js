"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MsgMigrateSharesToFullRangeConcentratedPositionResponse = exports.MsgMigrateSharesToFullRangeConcentratedPosition = exports.MsgCreateBalancerPoolResponse = exports.MsgCreateBalancerPool = void 0;
var _balancerPool = require("../balancerPool");
var _coin = require("../../../../../cosmos/base/v1beta1/coin");
var _timestamp = require("../../../../../google/protobuf/timestamp");
var _helpers = require("../../../../../helpers");
var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function createBaseMsgCreateBalancerPool() {
  return {
    sender: "",
    poolParams: undefined,
    poolAssets: [],
    futurePoolGovernor: ""
  };
}
var MsgCreateBalancerPool = {
  typeUrl: "/osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.sender !== "") {
      writer.uint32(10).string(message.sender);
    }
    if (message.poolParams !== undefined) {
      _balancerPool.PoolParams.encode(message.poolParams, writer.uint32(18).fork()).ldelim();
    }
    var _iterator = _createForOfIteratorHelper(message.poolAssets),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var v = _step.value;
        _balancerPool.PoolAsset.encode(v, writer.uint32(26).fork()).ldelim();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    if (message.futurePoolGovernor !== "") {
      writer.uint32(34).string(message.futurePoolGovernor);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreateBalancerPool();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;
        case 2:
          message.poolParams = _balancerPool.PoolParams.decode(reader, reader.uint32());
          break;
        case 3:
          message.poolAssets.push(_balancerPool.PoolAsset.decode(reader, reader.uint32()));
          break;
        case 4:
          message.futurePoolGovernor = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender, _object$poolAssets, _object$futurePoolGov;
    var message = createBaseMsgCreateBalancerPool();
    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : "";
    message.poolParams = object.poolParams !== undefined && object.poolParams !== null ? _balancerPool.PoolParams.fromPartial(object.poolParams) : undefined;
    message.poolAssets = ((_object$poolAssets = object.poolAssets) === null || _object$poolAssets === void 0 ? void 0 : _object$poolAssets.map(function (e) {
      return _balancerPool.PoolAsset.fromPartial(e);
    })) || [];
    message.futurePoolGovernor = (_object$futurePoolGov = object.futurePoolGovernor) !== null && _object$futurePoolGov !== void 0 ? _object$futurePoolGov : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      sender: object.sender,
      poolParams: object !== null && object !== void 0 && object.pool_params ? _balancerPool.PoolParams.fromAmino(object.pool_params) : undefined,
      poolAssets: Array.isArray(object === null || object === void 0 ? void 0 : object.pool_assets) ? object.pool_assets.map(function (e) {
        return _balancerPool.PoolAsset.fromAmino(e);
      }) : [],
      futurePoolGovernor: object.future_pool_governor
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.sender = message.sender;
    obj.pool_params = message.poolParams ? _balancerPool.PoolParams.toAmino(message.poolParams) : undefined;
    if (message.poolAssets) {
      obj.pool_assets = message.poolAssets.map(function (e) {
        return e ? _balancerPool.PoolAsset.toAmino(e) : undefined;
      });
    } else {
      obj.pool_assets = [];
    }
    obj.future_pool_governor = message.futurePoolGovernor;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCreateBalancerPool.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/gamm/create-balancer-pool",
      value: MsgCreateBalancerPool.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCreateBalancerPool.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCreateBalancerPool.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPool",
      value: MsgCreateBalancerPool.encode(message).finish()
    };
  }
};
exports.MsgCreateBalancerPool = MsgCreateBalancerPool;
function createBaseMsgCreateBalancerPoolResponse() {
  return {
    poolId: _helpers.Long.UZERO
  };
}
var MsgCreateBalancerPoolResponse = {
  typeUrl: "/osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreateBalancerPoolResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseMsgCreateBalancerPoolResponse();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      poolId: _helpers.Long.fromString(object.pool_id)
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.pool_id = message.poolId ? message.poolId.toString() : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCreateBalancerPoolResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/gamm/poolmodels/balancer/create-balancer-pool-response",
      value: MsgCreateBalancerPoolResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCreateBalancerPoolResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCreateBalancerPoolResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.gamm.poolmodels.balancer.v1beta1.MsgCreateBalancerPoolResponse",
      value: MsgCreateBalancerPoolResponse.encode(message).finish()
    };
  }
};
exports.MsgCreateBalancerPoolResponse = MsgCreateBalancerPoolResponse;
function createBaseMsgMigrateSharesToFullRangeConcentratedPosition() {
  return {
    sender: "",
    sharesToMigrate: undefined
  };
}
var MsgMigrateSharesToFullRangeConcentratedPosition = {
  typeUrl: "/osmosis.gamm.poolmodels.balancer.v1beta1.MsgMigrateSharesToFullRangeConcentratedPosition",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.sender !== "") {
      writer.uint32(10).string(message.sender);
    }
    if (message.sharesToMigrate !== undefined) {
      _coin.Coin.encode(message.sharesToMigrate, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgMigrateSharesToFullRangeConcentratedPosition();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;
        case 2:
          message.sharesToMigrate = _coin.Coin.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender2;
    var message = createBaseMsgMigrateSharesToFullRangeConcentratedPosition();
    message.sender = (_object$sender2 = object.sender) !== null && _object$sender2 !== void 0 ? _object$sender2 : "";
    message.sharesToMigrate = object.sharesToMigrate !== undefined && object.sharesToMigrate !== null ? _coin.Coin.fromPartial(object.sharesToMigrate) : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      sender: object.sender,
      sharesToMigrate: object !== null && object !== void 0 && object.shares_to_migrate ? _coin.Coin.fromAmino(object.shares_to_migrate) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.sender = message.sender;
    obj.shares_to_migrate = message.sharesToMigrate ? _coin.Coin.toAmino(message.sharesToMigrate) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgMigrateSharesToFullRangeConcentratedPosition.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/gamm/poolmodels/balancer/migrate-shares-to-full-range-concentrated-position",
      value: MsgMigrateSharesToFullRangeConcentratedPosition.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgMigrateSharesToFullRangeConcentratedPosition.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgMigrateSharesToFullRangeConcentratedPosition.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.gamm.poolmodels.balancer.v1beta1.MsgMigrateSharesToFullRangeConcentratedPosition",
      value: MsgMigrateSharesToFullRangeConcentratedPosition.encode(message).finish()
    };
  }
};
exports.MsgMigrateSharesToFullRangeConcentratedPosition = MsgMigrateSharesToFullRangeConcentratedPosition;
function createBaseMsgMigrateSharesToFullRangeConcentratedPositionResponse() {
  return {
    amount0: "",
    amount1: "",
    liquidityCreated: "",
    joinTime: undefined
  };
}
var MsgMigrateSharesToFullRangeConcentratedPositionResponse = {
  typeUrl: "/osmosis.gamm.poolmodels.balancer.v1beta1.MsgMigrateSharesToFullRangeConcentratedPositionResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.amount0 !== "") {
      writer.uint32(10).string(message.amount0);
    }
    if (message.amount1 !== "") {
      writer.uint32(18).string(message.amount1);
    }
    if (message.liquidityCreated !== "") {
      writer.uint32(26).string(message.liquidityCreated);
    }
    if (message.joinTime !== undefined) {
      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.joinTime), writer.uint32(34).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgMigrateSharesToFullRangeConcentratedPositionResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.amount0 = reader.string();
          break;
        case 2:
          message.amount1 = reader.string();
          break;
        case 3:
          message.liquidityCreated = reader.string();
          break;
        case 4:
          message.joinTime = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$amount, _object$amount2, _object$liquidityCrea, _object$joinTime;
    var message = createBaseMsgMigrateSharesToFullRangeConcentratedPositionResponse();
    message.amount0 = (_object$amount = object.amount0) !== null && _object$amount !== void 0 ? _object$amount : "";
    message.amount1 = (_object$amount2 = object.amount1) !== null && _object$amount2 !== void 0 ? _object$amount2 : "";
    message.liquidityCreated = (_object$liquidityCrea = object.liquidityCreated) !== null && _object$liquidityCrea !== void 0 ? _object$liquidityCrea : "";
    message.joinTime = (_object$joinTime = object.joinTime) !== null && _object$joinTime !== void 0 ? _object$joinTime : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      amount0: object.amount0,
      amount1: object.amount1,
      liquidityCreated: object.liquidity_created,
      joinTime: object !== null && object !== void 0 && object.join_time ? _timestamp.Timestamp.fromAmino(object.join_time) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.amount0 = message.amount0;
    obj.amount1 = message.amount1;
    obj.liquidity_created = message.liquidityCreated;
    obj.join_time = message.joinTime ? _timestamp.Timestamp.toAmino(message.joinTime) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgMigrateSharesToFullRangeConcentratedPositionResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/gamm/poolmodels/balancer/migrate-shares-to-full-range-concentrated-position-response",
      value: MsgMigrateSharesToFullRangeConcentratedPositionResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgMigrateSharesToFullRangeConcentratedPositionResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgMigrateSharesToFullRangeConcentratedPositionResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.gamm.poolmodels.balancer.v1beta1.MsgMigrateSharesToFullRangeConcentratedPositionResponse",
      value: MsgMigrateSharesToFullRangeConcentratedPositionResponse.encode(message).finish()
    };
  }
};
exports.MsgMigrateSharesToFullRangeConcentratedPositionResponse = MsgMigrateSharesToFullRangeConcentratedPositionResponse;