"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MsgCreateConcentratedPoolResponse = exports.MsgCreateConcentratedPool = void 0;
var _helpers = require("../../../helpers");
var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function createBaseMsgCreateConcentratedPool() {
  return {
    sender: "",
    denom0: "",
    denom1: "",
    tickSpacing: _helpers.Long.UZERO,
    exponentAtPriceOne: "",
    swapFee: ""
  };
}
var MsgCreateConcentratedPool = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreateConcentratedPool",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.sender !== "") {
      writer.uint32(10).string(message.sender);
    }
    if (message.denom0 !== "") {
      writer.uint32(18).string(message.denom0);
    }
    if (message.denom1 !== "") {
      writer.uint32(26).string(message.denom1);
    }
    if (!message.tickSpacing.isZero()) {
      writer.uint32(32).uint64(message.tickSpacing);
    }
    if (message.exponentAtPriceOne !== "") {
      writer.uint32(42).string(message.exponentAtPriceOne);
    }
    if (message.swapFee !== "") {
      writer.uint32(74).string(message.swapFee);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreateConcentratedPool();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;
        case 2:
          message.denom0 = reader.string();
          break;
        case 3:
          message.denom1 = reader.string();
          break;
        case 4:
          message.tickSpacing = reader.uint64();
          break;
        case 5:
          message.exponentAtPriceOne = reader.string();
          break;
        case 9:
          message.swapFee = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender, _object$denom, _object$denom2, _object$exponentAtPri, _object$swapFee;
    var message = createBaseMsgCreateConcentratedPool();
    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : "";
    message.denom0 = (_object$denom = object.denom0) !== null && _object$denom !== void 0 ? _object$denom : "";
    message.denom1 = (_object$denom2 = object.denom1) !== null && _object$denom2 !== void 0 ? _object$denom2 : "";
    message.tickSpacing = object.tickSpacing !== undefined && object.tickSpacing !== null ? _helpers.Long.fromValue(object.tickSpacing) : _helpers.Long.UZERO;
    message.exponentAtPriceOne = (_object$exponentAtPri = object.exponentAtPriceOne) !== null && _object$exponentAtPri !== void 0 ? _object$exponentAtPri : "";
    message.swapFee = (_object$swapFee = object.swapFee) !== null && _object$swapFee !== void 0 ? _object$swapFee : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      sender: object.sender,
      denom0: object.denom0,
      denom1: object.denom1,
      tickSpacing: _helpers.Long.fromString(object.tick_spacing),
      exponentAtPriceOne: object.exponent_at_price_one,
      swapFee: object.swap_fee
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.sender = message.sender;
    obj.denom0 = message.denom0;
    obj.denom1 = message.denom1;
    obj.tick_spacing = message.tickSpacing ? message.tickSpacing.toString() : undefined;
    obj.exponent_at_price_one = message.exponentAtPriceOne;
    obj.swap_fee = message.swapFee;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCreateConcentratedPool.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/create-concentrated-pool",
      value: MsgCreateConcentratedPool.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCreateConcentratedPool.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCreateConcentratedPool.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreateConcentratedPool",
      value: MsgCreateConcentratedPool.encode(message).finish()
    };
  }
};
exports.MsgCreateConcentratedPool = MsgCreateConcentratedPool;
function createBaseMsgCreateConcentratedPoolResponse() {
  return {
    poolId: _helpers.Long.UZERO
  };
}
var MsgCreateConcentratedPoolResponse = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreateConcentratedPoolResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreateConcentratedPoolResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseMsgCreateConcentratedPoolResponse();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      poolId: _helpers.Long.fromString(object.pool_id)
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.pool_id = message.poolId ? message.poolId.toString() : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCreateConcentratedPoolResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/create-concentrated-pool-response",
      value: MsgCreateConcentratedPoolResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCreateConcentratedPoolResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCreateConcentratedPoolResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreateConcentratedPoolResponse",
      value: MsgCreateConcentratedPoolResponse.encode(message).finish()
    };
  }
};
exports.MsgCreateConcentratedPoolResponse = MsgCreateConcentratedPoolResponse;