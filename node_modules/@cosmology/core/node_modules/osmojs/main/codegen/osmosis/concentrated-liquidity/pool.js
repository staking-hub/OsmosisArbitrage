"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pool = void 0;
var _timestamp = require("../../google/protobuf/timestamp");
var _helpers = require("../../helpers");
var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function createBasePool() {
  return {
    $typeUrl: "/osmosis.concentratedliquidity.v1beta1.Pool",
    address: "",
    incentivesAddress: "",
    id: _helpers.Long.UZERO,
    currentTickLiquidity: "",
    token0: "",
    token1: "",
    currentSqrtPrice: "",
    currentTick: "",
    tickSpacing: _helpers.Long.UZERO,
    exponentAtPriceOne: "",
    swapFee: "",
    lastLiquidityUpdate: undefined
  };
}
var Pool = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.Pool",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.address !== "") {
      writer.uint32(10).string(message.address);
    }
    if (message.incentivesAddress !== "") {
      writer.uint32(18).string(message.incentivesAddress);
    }
    if (!message.id.isZero()) {
      writer.uint32(24).uint64(message.id);
    }
    if (message.currentTickLiquidity !== "") {
      writer.uint32(34).string(message.currentTickLiquidity);
    }
    if (message.token0 !== "") {
      writer.uint32(42).string(message.token0);
    }
    if (message.token1 !== "") {
      writer.uint32(50).string(message.token1);
    }
    if (message.currentSqrtPrice !== "") {
      writer.uint32(58).string(message.currentSqrtPrice);
    }
    if (message.currentTick !== "") {
      writer.uint32(66).string(message.currentTick);
    }
    if (!message.tickSpacing.isZero()) {
      writer.uint32(72).uint64(message.tickSpacing);
    }
    if (message.exponentAtPriceOne !== "") {
      writer.uint32(82).string(message.exponentAtPriceOne);
    }
    if (message.swapFee !== "") {
      writer.uint32(90).string(message.swapFee);
    }
    if (message.lastLiquidityUpdate !== undefined) {
      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.lastLiquidityUpdate), writer.uint32(98).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBasePool();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.address = reader.string();
          break;
        case 2:
          message.incentivesAddress = reader.string();
          break;
        case 3:
          message.id = reader.uint64();
          break;
        case 4:
          message.currentTickLiquidity = reader.string();
          break;
        case 5:
          message.token0 = reader.string();
          break;
        case 6:
          message.token1 = reader.string();
          break;
        case 7:
          message.currentSqrtPrice = reader.string();
          break;
        case 8:
          message.currentTick = reader.string();
          break;
        case 9:
          message.tickSpacing = reader.uint64();
          break;
        case 10:
          message.exponentAtPriceOne = reader.string();
          break;
        case 11:
          message.swapFee = reader.string();
          break;
        case 12:
          message.lastLiquidityUpdate = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$address, _object$incentivesAdd, _object$currentTickLi, _object$token, _object$token2, _object$currentSqrtPr, _object$currentTick, _object$exponentAtPri, _object$swapFee, _object$lastLiquidity;
    var message = createBasePool();
    message.address = (_object$address = object.address) !== null && _object$address !== void 0 ? _object$address : "";
    message.incentivesAddress = (_object$incentivesAdd = object.incentivesAddress) !== null && _object$incentivesAdd !== void 0 ? _object$incentivesAdd : "";
    message.id = object.id !== undefined && object.id !== null ? _helpers.Long.fromValue(object.id) : _helpers.Long.UZERO;
    message.currentTickLiquidity = (_object$currentTickLi = object.currentTickLiquidity) !== null && _object$currentTickLi !== void 0 ? _object$currentTickLi : "";
    message.token0 = (_object$token = object.token0) !== null && _object$token !== void 0 ? _object$token : "";
    message.token1 = (_object$token2 = object.token1) !== null && _object$token2 !== void 0 ? _object$token2 : "";
    message.currentSqrtPrice = (_object$currentSqrtPr = object.currentSqrtPrice) !== null && _object$currentSqrtPr !== void 0 ? _object$currentSqrtPr : "";
    message.currentTick = (_object$currentTick = object.currentTick) !== null && _object$currentTick !== void 0 ? _object$currentTick : "";
    message.tickSpacing = object.tickSpacing !== undefined && object.tickSpacing !== null ? _helpers.Long.fromValue(object.tickSpacing) : _helpers.Long.UZERO;
    message.exponentAtPriceOne = (_object$exponentAtPri = object.exponentAtPriceOne) !== null && _object$exponentAtPri !== void 0 ? _object$exponentAtPri : "";
    message.swapFee = (_object$swapFee = object.swapFee) !== null && _object$swapFee !== void 0 ? _object$swapFee : "";
    message.lastLiquidityUpdate = (_object$lastLiquidity = object.lastLiquidityUpdate) !== null && _object$lastLiquidity !== void 0 ? _object$lastLiquidity : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      address: object.address,
      incentivesAddress: object.incentives_address,
      id: _helpers.Long.fromString(object.id),
      currentTickLiquidity: object.current_tick_liquidity,
      token0: object.token0,
      token1: object.token1,
      currentSqrtPrice: object.current_sqrt_price,
      currentTick: object.current_tick,
      tickSpacing: _helpers.Long.fromString(object.tick_spacing),
      exponentAtPriceOne: object.exponent_at_price_one,
      swapFee: object.swap_fee,
      lastLiquidityUpdate: object !== null && object !== void 0 && object.last_liquidity_update ? _timestamp.Timestamp.fromAmino(object.last_liquidity_update) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.address = message.address;
    obj.incentives_address = message.incentivesAddress;
    obj.id = message.id ? message.id.toString() : undefined;
    obj.current_tick_liquidity = message.currentTickLiquidity;
    obj.token0 = message.token0;
    obj.token1 = message.token1;
    obj.current_sqrt_price = message.currentSqrtPrice;
    obj.current_tick = message.currentTick;
    obj.tick_spacing = message.tickSpacing ? message.tickSpacing.toString() : undefined;
    obj.exponent_at_price_one = message.exponentAtPriceOne;
    obj.swap_fee = message.swapFee;
    obj.last_liquidity_update = message.lastLiquidityUpdate ? _timestamp.Timestamp.toAmino(message.lastLiquidityUpdate) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return Pool.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/pool",
      value: Pool.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return Pool.decode(message.value);
  },
  toProto: function toProto(message) {
    return Pool.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.Pool",
      value: Pool.encode(message).finish()
    };
  }
};
exports.Pool = Pool;