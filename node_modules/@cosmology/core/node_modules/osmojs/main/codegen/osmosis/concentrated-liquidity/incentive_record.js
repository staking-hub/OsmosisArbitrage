"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IncentiveRecordBody = exports.IncentiveRecord = void 0;
var _duration = require("../../google/protobuf/duration");
var _timestamp = require("../../google/protobuf/timestamp");
var _helpers = require("../../helpers");
var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function createBaseIncentiveRecord() {
  return {
    poolId: _helpers.Long.UZERO,
    incentiveDenom: "",
    incentiveCreatorAddr: "",
    incentiveRecordBody: undefined,
    minUptime: undefined
  };
}
var IncentiveRecord = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.IncentiveRecord",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }
    if (message.incentiveDenom !== "") {
      writer.uint32(18).string(message.incentiveDenom);
    }
    if (message.incentiveCreatorAddr !== "") {
      writer.uint32(26).string(message.incentiveCreatorAddr);
    }
    if (message.incentiveRecordBody !== undefined) {
      IncentiveRecordBody.encode(message.incentiveRecordBody, writer.uint32(34).fork()).ldelim();
    }
    if (message.minUptime !== undefined) {
      _duration.Duration.encode(message.minUptime, writer.uint32(42).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseIncentiveRecord();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;
        case 2:
          message.incentiveDenom = reader.string();
          break;
        case 3:
          message.incentiveCreatorAddr = reader.string();
          break;
        case 4:
          message.incentiveRecordBody = IncentiveRecordBody.decode(reader, reader.uint32());
          break;
        case 5:
          message.minUptime = _duration.Duration.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$incentiveDeno, _object$incentiveCrea;
    var message = createBaseIncentiveRecord();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    message.incentiveDenom = (_object$incentiveDeno = object.incentiveDenom) !== null && _object$incentiveDeno !== void 0 ? _object$incentiveDeno : "";
    message.incentiveCreatorAddr = (_object$incentiveCrea = object.incentiveCreatorAddr) !== null && _object$incentiveCrea !== void 0 ? _object$incentiveCrea : "";
    message.incentiveRecordBody = object.incentiveRecordBody !== undefined && object.incentiveRecordBody !== null ? IncentiveRecordBody.fromPartial(object.incentiveRecordBody) : undefined;
    message.minUptime = object.minUptime !== undefined && object.minUptime !== null ? _duration.Duration.fromPartial(object.minUptime) : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      poolId: _helpers.Long.fromString(object.pool_id),
      incentiveDenom: object.incentive_denom,
      incentiveCreatorAddr: object.incentive_creator_addr,
      incentiveRecordBody: object !== null && object !== void 0 && object.incentive_record_body ? IncentiveRecordBody.fromAmino(object.incentive_record_body) : undefined,
      minUptime: object !== null && object !== void 0 && object.min_uptime ? _duration.Duration.fromAmino(object.min_uptime) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.pool_id = message.poolId ? message.poolId.toString() : undefined;
    obj.incentive_denom = message.incentiveDenom;
    obj.incentive_creator_addr = message.incentiveCreatorAddr;
    obj.incentive_record_body = message.incentiveRecordBody ? IncentiveRecordBody.toAmino(message.incentiveRecordBody) : undefined;
    obj.min_uptime = message.minUptime ? _duration.Duration.toAmino(message.minUptime) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return IncentiveRecord.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/incentive-record",
      value: IncentiveRecord.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return IncentiveRecord.decode(message.value);
  },
  toProto: function toProto(message) {
    return IncentiveRecord.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.IncentiveRecord",
      value: IncentiveRecord.encode(message).finish()
    };
  }
};
exports.IncentiveRecord = IncentiveRecord;
function createBaseIncentiveRecordBody() {
  return {
    remainingAmount: "",
    emissionRate: "",
    startTime: undefined
  };
}
var IncentiveRecordBody = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.IncentiveRecordBody",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.remainingAmount !== "") {
      writer.uint32(10).string(message.remainingAmount);
    }
    if (message.emissionRate !== "") {
      writer.uint32(18).string(message.emissionRate);
    }
    if (message.startTime !== undefined) {
      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.startTime), writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseIncentiveRecordBody();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.remainingAmount = reader.string();
          break;
        case 2:
          message.emissionRate = reader.string();
          break;
        case 3:
          message.startTime = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$remainingAmou, _object$emissionRate, _object$startTime;
    var message = createBaseIncentiveRecordBody();
    message.remainingAmount = (_object$remainingAmou = object.remainingAmount) !== null && _object$remainingAmou !== void 0 ? _object$remainingAmou : "";
    message.emissionRate = (_object$emissionRate = object.emissionRate) !== null && _object$emissionRate !== void 0 ? _object$emissionRate : "";
    message.startTime = (_object$startTime = object.startTime) !== null && _object$startTime !== void 0 ? _object$startTime : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      remainingAmount: object.remaining_amount,
      emissionRate: object.emission_rate,
      startTime: object !== null && object !== void 0 && object.start_time ? _timestamp.Timestamp.fromAmino(object.start_time) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.remaining_amount = message.remainingAmount;
    obj.emission_rate = message.emissionRate;
    obj.start_time = message.startTime ? _timestamp.Timestamp.toAmino(message.startTime) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return IncentiveRecordBody.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/incentive-record-body",
      value: IncentiveRecordBody.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return IncentiveRecordBody.decode(message.value);
  },
  toProto: function toProto(message) {
    return IncentiveRecordBody.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.IncentiveRecordBody",
      value: IncentiveRecordBody.encode(message).finish()
    };
  }
};
exports.IncentiveRecordBody = IncentiveRecordBody;