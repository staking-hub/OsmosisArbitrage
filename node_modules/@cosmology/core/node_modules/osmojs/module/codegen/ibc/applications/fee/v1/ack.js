import * as _m0 from "protobufjs/minimal";
/** IncentivizedAcknowledgement is the acknowledgement format to be used by applications wrapped in the fee middleware */

function createBaseIncentivizedAcknowledgement() {
  return {
    appAcknowledgement: new Uint8Array(),
    forwardRelayerAddress: "",
    underlyingAppSuccess: false
  };
}
export const IncentivizedAcknowledgement = {
  typeUrl: "/ibc.applications.fee.v1.IncentivizedAcknowledgement",
  encode(message, writer = _m0.Writer.create()) {
    if (message.appAcknowledgement.length !== 0) {
      writer.uint32(10).bytes(message.appAcknowledgement);
    }
    if (message.forwardRelayerAddress !== "") {
      writer.uint32(18).string(message.forwardRelayerAddress);
    }
    if (message.underlyingAppSuccess === true) {
      writer.uint32(24).bool(message.underlyingAppSuccess);
    }
    return writer;
  },
  decode(input, length) {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseIncentivizedAcknowledgement();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.appAcknowledgement = reader.bytes();
          break;
        case 2:
          message.forwardRelayerAddress = reader.string();
          break;
        case 3:
          message.underlyingAppSuccess = reader.bool();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial(object) {
    var _object$appAcknowledg, _object$forwardRelaye, _object$underlyingApp;
    const message = createBaseIncentivizedAcknowledgement();
    message.appAcknowledgement = (_object$appAcknowledg = object.appAcknowledgement) !== null && _object$appAcknowledg !== void 0 ? _object$appAcknowledg : new Uint8Array();
    message.forwardRelayerAddress = (_object$forwardRelaye = object.forwardRelayerAddress) !== null && _object$forwardRelaye !== void 0 ? _object$forwardRelaye : "";
    message.underlyingAppSuccess = (_object$underlyingApp = object.underlyingAppSuccess) !== null && _object$underlyingApp !== void 0 ? _object$underlyingApp : false;
    return message;
  },
  fromAmino(object) {
    return {
      appAcknowledgement: object.app_acknowledgement,
      forwardRelayerAddress: object.forward_relayer_address,
      underlyingAppSuccess: object.underlying_app_success
    };
  },
  toAmino(message) {
    const obj = {};
    obj.app_acknowledgement = message.appAcknowledgement;
    obj.forward_relayer_address = message.forwardRelayerAddress;
    obj.underlying_app_success = message.underlyingAppSuccess;
    return obj;
  },
  fromAminoMsg(object) {
    return IncentivizedAcknowledgement.fromAmino(object.value);
  },
  toAminoMsg(message) {
    return {
      type: "cosmos-sdk/IncentivizedAcknowledgement",
      value: IncentivizedAcknowledgement.toAmino(message)
    };
  },
  fromProtoMsg(message) {
    return IncentivizedAcknowledgement.decode(message.value);
  },
  toProto(message) {
    return IncentivizedAcknowledgement.encode(message).finish();
  },
  toProtoMsg(message) {
    return {
      typeUrl: "/ibc.applications.fee.v1.IncentivizedAcknowledgement",
      value: IncentivizedAcknowledgement.encode(message).finish()
    };
  }
};