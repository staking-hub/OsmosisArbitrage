"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MsgWithdrawPositionResponse = exports.MsgWithdrawPosition = exports.MsgFungifyChargedPositionsResponse = exports.MsgFungifyChargedPositions = exports.MsgCreatePositionResponse = exports.MsgCreatePosition = exports.MsgCreateIncentiveResponse = exports.MsgCreateIncentive = exports.MsgCollectIncentivesResponse = exports.MsgCollectIncentives = exports.MsgCollectFeesResponse = exports.MsgCollectFees = void 0;
var _coin = require("../../cosmos/base/v1beta1/coin");
var _timestamp = require("../../google/protobuf/timestamp");
var _duration = require("../../google/protobuf/duration");
var _helpers = require("../../helpers");
var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function createBaseMsgCreatePosition() {
  return {
    poolId: _helpers.Long.UZERO,
    sender: "",
    lowerTick: _helpers.Long.ZERO,
    upperTick: _helpers.Long.ZERO,
    tokenDesired0: undefined,
    tokenDesired1: undefined,
    tokenMinAmount0: "",
    tokenMinAmount1: ""
  };
}
var MsgCreatePosition = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreatePosition",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }
    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }
    if (!message.lowerTick.isZero()) {
      writer.uint32(24).int64(message.lowerTick);
    }
    if (!message.upperTick.isZero()) {
      writer.uint32(32).int64(message.upperTick);
    }
    if (message.tokenDesired0 !== undefined) {
      _coin.Coin.encode(message.tokenDesired0, writer.uint32(42).fork()).ldelim();
    }
    if (message.tokenDesired1 !== undefined) {
      _coin.Coin.encode(message.tokenDesired1, writer.uint32(50).fork()).ldelim();
    }
    if (message.tokenMinAmount0 !== "") {
      writer.uint32(58).string(message.tokenMinAmount0);
    }
    if (message.tokenMinAmount1 !== "") {
      writer.uint32(66).string(message.tokenMinAmount1);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreatePosition();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;
        case 2:
          message.sender = reader.string();
          break;
        case 3:
          message.lowerTick = reader.int64();
          break;
        case 4:
          message.upperTick = reader.int64();
          break;
        case 5:
          message.tokenDesired0 = _coin.Coin.decode(reader, reader.uint32());
          break;
        case 6:
          message.tokenDesired1 = _coin.Coin.decode(reader, reader.uint32());
          break;
        case 7:
          message.tokenMinAmount0 = reader.string();
          break;
        case 8:
          message.tokenMinAmount1 = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender, _object$tokenMinAmoun, _object$tokenMinAmoun2;
    var message = createBaseMsgCreatePosition();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : "";
    message.lowerTick = object.lowerTick !== undefined && object.lowerTick !== null ? _helpers.Long.fromValue(object.lowerTick) : _helpers.Long.ZERO;
    message.upperTick = object.upperTick !== undefined && object.upperTick !== null ? _helpers.Long.fromValue(object.upperTick) : _helpers.Long.ZERO;
    message.tokenDesired0 = object.tokenDesired0 !== undefined && object.tokenDesired0 !== null ? _coin.Coin.fromPartial(object.tokenDesired0) : undefined;
    message.tokenDesired1 = object.tokenDesired1 !== undefined && object.tokenDesired1 !== null ? _coin.Coin.fromPartial(object.tokenDesired1) : undefined;
    message.tokenMinAmount0 = (_object$tokenMinAmoun = object.tokenMinAmount0) !== null && _object$tokenMinAmoun !== void 0 ? _object$tokenMinAmoun : "";
    message.tokenMinAmount1 = (_object$tokenMinAmoun2 = object.tokenMinAmount1) !== null && _object$tokenMinAmoun2 !== void 0 ? _object$tokenMinAmoun2 : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      poolId: _helpers.Long.fromString(object.pool_id),
      sender: object.sender,
      lowerTick: _helpers.Long.fromString(object.lower_tick),
      upperTick: _helpers.Long.fromString(object.upper_tick),
      tokenDesired0: object !== null && object !== void 0 && object.token_desired0 ? _coin.Coin.fromAmino(object.token_desired0) : undefined,
      tokenDesired1: object !== null && object !== void 0 && object.token_desired1 ? _coin.Coin.fromAmino(object.token_desired1) : undefined,
      tokenMinAmount0: object.token_min_amount0,
      tokenMinAmount1: object.token_min_amount1
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.pool_id = message.poolId ? message.poolId.toString() : undefined;
    obj.sender = message.sender;
    obj.lower_tick = message.lowerTick ? message.lowerTick.toString() : undefined;
    obj.upper_tick = message.upperTick ? message.upperTick.toString() : undefined;
    obj.token_desired0 = message.tokenDesired0 ? _coin.Coin.toAmino(message.tokenDesired0) : undefined;
    obj.token_desired1 = message.tokenDesired1 ? _coin.Coin.toAmino(message.tokenDesired1) : undefined;
    obj.token_min_amount0 = message.tokenMinAmount0;
    obj.token_min_amount1 = message.tokenMinAmount1;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCreatePosition.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/create-position",
      value: MsgCreatePosition.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCreatePosition.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCreatePosition.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreatePosition",
      value: MsgCreatePosition.encode(message).finish()
    };
  }
};
exports.MsgCreatePosition = MsgCreatePosition;
function createBaseMsgCreatePositionResponse() {
  return {
    positionId: _helpers.Long.UZERO,
    amount0: "",
    amount1: "",
    joinTime: undefined,
    liquidityCreated: ""
  };
}
var MsgCreatePositionResponse = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreatePositionResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.positionId.isZero()) {
      writer.uint32(8).uint64(message.positionId);
    }
    if (message.amount0 !== "") {
      writer.uint32(18).string(message.amount0);
    }
    if (message.amount1 !== "") {
      writer.uint32(26).string(message.amount1);
    }
    if (message.joinTime !== undefined) {
      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.joinTime), writer.uint32(34).fork()).ldelim();
    }
    if (message.liquidityCreated !== "") {
      writer.uint32(42).string(message.liquidityCreated);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreatePositionResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.positionId = reader.uint64();
          break;
        case 2:
          message.amount0 = reader.string();
          break;
        case 3:
          message.amount1 = reader.string();
          break;
        case 4:
          message.joinTime = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));
          break;
        case 5:
          message.liquidityCreated = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$amount, _object$amount2, _object$joinTime, _object$liquidityCrea;
    var message = createBaseMsgCreatePositionResponse();
    message.positionId = object.positionId !== undefined && object.positionId !== null ? _helpers.Long.fromValue(object.positionId) : _helpers.Long.UZERO;
    message.amount0 = (_object$amount = object.amount0) !== null && _object$amount !== void 0 ? _object$amount : "";
    message.amount1 = (_object$amount2 = object.amount1) !== null && _object$amount2 !== void 0 ? _object$amount2 : "";
    message.joinTime = (_object$joinTime = object.joinTime) !== null && _object$joinTime !== void 0 ? _object$joinTime : undefined;
    message.liquidityCreated = (_object$liquidityCrea = object.liquidityCreated) !== null && _object$liquidityCrea !== void 0 ? _object$liquidityCrea : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      positionId: _helpers.Long.fromString(object.position_id),
      amount0: object.amount0,
      amount1: object.amount1,
      joinTime: object !== null && object !== void 0 && object.join_time ? _timestamp.Timestamp.fromAmino(object.join_time) : undefined,
      liquidityCreated: object.liquidity_created
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.position_id = message.positionId ? message.positionId.toString() : undefined;
    obj.amount0 = message.amount0;
    obj.amount1 = message.amount1;
    obj.join_time = message.joinTime ? _timestamp.Timestamp.toAmino(message.joinTime) : undefined;
    obj.liquidity_created = message.liquidityCreated;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCreatePositionResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/create-position-response",
      value: MsgCreatePositionResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCreatePositionResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCreatePositionResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreatePositionResponse",
      value: MsgCreatePositionResponse.encode(message).finish()
    };
  }
};
exports.MsgCreatePositionResponse = MsgCreatePositionResponse;
function createBaseMsgWithdrawPosition() {
  return {
    positionId: _helpers.Long.UZERO,
    sender: "",
    liquidityAmount: ""
  };
}
var MsgWithdrawPosition = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPosition",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.positionId.isZero()) {
      writer.uint32(8).uint64(message.positionId);
    }
    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }
    if (message.liquidityAmount !== "") {
      writer.uint32(26).string(message.liquidityAmount);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgWithdrawPosition();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.positionId = reader.uint64();
          break;
        case 2:
          message.sender = reader.string();
          break;
        case 3:
          message.liquidityAmount = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender2, _object$liquidityAmou;
    var message = createBaseMsgWithdrawPosition();
    message.positionId = object.positionId !== undefined && object.positionId !== null ? _helpers.Long.fromValue(object.positionId) : _helpers.Long.UZERO;
    message.sender = (_object$sender2 = object.sender) !== null && _object$sender2 !== void 0 ? _object$sender2 : "";
    message.liquidityAmount = (_object$liquidityAmou = object.liquidityAmount) !== null && _object$liquidityAmou !== void 0 ? _object$liquidityAmou : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      positionId: _helpers.Long.fromString(object.position_id),
      sender: object.sender,
      liquidityAmount: object.liquidity_amount
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.position_id = message.positionId ? message.positionId.toString() : undefined;
    obj.sender = message.sender;
    obj.liquidity_amount = message.liquidityAmount;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgWithdrawPosition.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/withdraw-position",
      value: MsgWithdrawPosition.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgWithdrawPosition.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgWithdrawPosition.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPosition",
      value: MsgWithdrawPosition.encode(message).finish()
    };
  }
};
exports.MsgWithdrawPosition = MsgWithdrawPosition;
function createBaseMsgWithdrawPositionResponse() {
  return {
    amount0: "",
    amount1: ""
  };
}
var MsgWithdrawPositionResponse = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPositionResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.amount0 !== "") {
      writer.uint32(10).string(message.amount0);
    }
    if (message.amount1 !== "") {
      writer.uint32(18).string(message.amount1);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgWithdrawPositionResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.amount0 = reader.string();
          break;
        case 2:
          message.amount1 = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$amount3, _object$amount4;
    var message = createBaseMsgWithdrawPositionResponse();
    message.amount0 = (_object$amount3 = object.amount0) !== null && _object$amount3 !== void 0 ? _object$amount3 : "";
    message.amount1 = (_object$amount4 = object.amount1) !== null && _object$amount4 !== void 0 ? _object$amount4 : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      amount0: object.amount0,
      amount1: object.amount1
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.amount0 = message.amount0;
    obj.amount1 = message.amount1;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgWithdrawPositionResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/withdraw-position-response",
      value: MsgWithdrawPositionResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgWithdrawPositionResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgWithdrawPositionResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPositionResponse",
      value: MsgWithdrawPositionResponse.encode(message).finish()
    };
  }
};
exports.MsgWithdrawPositionResponse = MsgWithdrawPositionResponse;
function createBaseMsgCollectFees() {
  return {
    positionIds: [],
    sender: ""
  };
}
var MsgCollectFees = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCollectFees",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    writer.uint32(10).fork();
    var _iterator = _createForOfIteratorHelper(message.positionIds),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var v = _step.value;
        writer.uint64(v);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    writer.ldelim();
    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCollectFees();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.positionIds.push(reader.uint64());
            }
          } else {
            message.positionIds.push(reader.uint64());
          }
          break;
        case 2:
          message.sender = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$positionIds, _object$sender3;
    var message = createBaseMsgCollectFees();
    message.positionIds = ((_object$positionIds = object.positionIds) === null || _object$positionIds === void 0 ? void 0 : _object$positionIds.map(function (e) {
      return _helpers.Long.fromValue(e);
    })) || [];
    message.sender = (_object$sender3 = object.sender) !== null && _object$sender3 !== void 0 ? _object$sender3 : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      positionIds: Array.isArray(object === null || object === void 0 ? void 0 : object.position_ids) ? object.position_ids.map(function (e) {
        return e;
      }) : [],
      sender: object.sender
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    if (message.positionIds) {
      obj.position_ids = message.positionIds.map(function (e) {
        return e;
      });
    } else {
      obj.position_ids = [];
    }
    obj.sender = message.sender;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCollectFees.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/collect-fees",
      value: MsgCollectFees.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCollectFees.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCollectFees.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCollectFees",
      value: MsgCollectFees.encode(message).finish()
    };
  }
};
exports.MsgCollectFees = MsgCollectFees;
function createBaseMsgCollectFeesResponse() {
  return {
    collectedFees: []
  };
}
var MsgCollectFeesResponse = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCollectFeesResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    var _iterator2 = _createForOfIteratorHelper(message.collectedFees),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var v = _step2.value;
        _coin.Coin.encode(v, writer.uint32(10).fork()).ldelim();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCollectFeesResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.collectedFees.push(_coin.Coin.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$collectedFees;
    var message = createBaseMsgCollectFeesResponse();
    message.collectedFees = ((_object$collectedFees = object.collectedFees) === null || _object$collectedFees === void 0 ? void 0 : _object$collectedFees.map(function (e) {
      return _coin.Coin.fromPartial(e);
    })) || [];
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      collectedFees: Array.isArray(object === null || object === void 0 ? void 0 : object.collected_fees) ? object.collected_fees.map(function (e) {
        return _coin.Coin.fromAmino(e);
      }) : []
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    if (message.collectedFees) {
      obj.collected_fees = message.collectedFees.map(function (e) {
        return e ? _coin.Coin.toAmino(e) : undefined;
      });
    } else {
      obj.collected_fees = [];
    }
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCollectFeesResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/collect-fees-response",
      value: MsgCollectFeesResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCollectFeesResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCollectFeesResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCollectFeesResponse",
      value: MsgCollectFeesResponse.encode(message).finish()
    };
  }
};
exports.MsgCollectFeesResponse = MsgCollectFeesResponse;
function createBaseMsgCollectIncentives() {
  return {
    positionIds: [],
    sender: ""
  };
}
var MsgCollectIncentives = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentives",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    writer.uint32(10).fork();
    var _iterator3 = _createForOfIteratorHelper(message.positionIds),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var v = _step3.value;
        writer.uint64(v);
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    writer.ldelim();
    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCollectIncentives();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.positionIds.push(reader.uint64());
            }
          } else {
            message.positionIds.push(reader.uint64());
          }
          break;
        case 2:
          message.sender = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$positionIds2, _object$sender4;
    var message = createBaseMsgCollectIncentives();
    message.positionIds = ((_object$positionIds2 = object.positionIds) === null || _object$positionIds2 === void 0 ? void 0 : _object$positionIds2.map(function (e) {
      return _helpers.Long.fromValue(e);
    })) || [];
    message.sender = (_object$sender4 = object.sender) !== null && _object$sender4 !== void 0 ? _object$sender4 : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      positionIds: Array.isArray(object === null || object === void 0 ? void 0 : object.position_ids) ? object.position_ids.map(function (e) {
        return e;
      }) : [],
      sender: object.sender
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    if (message.positionIds) {
      obj.position_ids = message.positionIds.map(function (e) {
        return e;
      });
    } else {
      obj.position_ids = [];
    }
    obj.sender = message.sender;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCollectIncentives.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/collect-incentives",
      value: MsgCollectIncentives.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCollectIncentives.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCollectIncentives.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentives",
      value: MsgCollectIncentives.encode(message).finish()
    };
  }
};
exports.MsgCollectIncentives = MsgCollectIncentives;
function createBaseMsgCollectIncentivesResponse() {
  return {
    collectedIncentives: []
  };
}
var MsgCollectIncentivesResponse = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentivesResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    var _iterator4 = _createForOfIteratorHelper(message.collectedIncentives),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var v = _step4.value;
        _coin.Coin.encode(v, writer.uint32(10).fork()).ldelim();
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCollectIncentivesResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.collectedIncentives.push(_coin.Coin.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$collectedInce;
    var message = createBaseMsgCollectIncentivesResponse();
    message.collectedIncentives = ((_object$collectedInce = object.collectedIncentives) === null || _object$collectedInce === void 0 ? void 0 : _object$collectedInce.map(function (e) {
      return _coin.Coin.fromPartial(e);
    })) || [];
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      collectedIncentives: Array.isArray(object === null || object === void 0 ? void 0 : object.collected_incentives) ? object.collected_incentives.map(function (e) {
        return _coin.Coin.fromAmino(e);
      }) : []
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    if (message.collectedIncentives) {
      obj.collected_incentives = message.collectedIncentives.map(function (e) {
        return e ? _coin.Coin.toAmino(e) : undefined;
      });
    } else {
      obj.collected_incentives = [];
    }
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCollectIncentivesResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/collect-incentives-response",
      value: MsgCollectIncentivesResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCollectIncentivesResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCollectIncentivesResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCollectIncentivesResponse",
      value: MsgCollectIncentivesResponse.encode(message).finish()
    };
  }
};
exports.MsgCollectIncentivesResponse = MsgCollectIncentivesResponse;
function createBaseMsgCreateIncentive() {
  return {
    poolId: _helpers.Long.UZERO,
    sender: "",
    incentiveDenom: "",
    incentiveAmount: "",
    emissionRate: "",
    startTime: undefined,
    minUptime: undefined
  };
}
var MsgCreateIncentive = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreateIncentive",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }
    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }
    if (message.incentiveDenom !== "") {
      writer.uint32(26).string(message.incentiveDenom);
    }
    if (message.incentiveAmount !== "") {
      writer.uint32(34).string(message.incentiveAmount);
    }
    if (message.emissionRate !== "") {
      writer.uint32(42).string(message.emissionRate);
    }
    if (message.startTime !== undefined) {
      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.startTime), writer.uint32(50).fork()).ldelim();
    }
    if (message.minUptime !== undefined) {
      _duration.Duration.encode(message.minUptime, writer.uint32(58).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreateIncentive();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;
        case 2:
          message.sender = reader.string();
          break;
        case 3:
          message.incentiveDenom = reader.string();
          break;
        case 4:
          message.incentiveAmount = reader.string();
          break;
        case 5:
          message.emissionRate = reader.string();
          break;
        case 6:
          message.startTime = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));
          break;
        case 7:
          message.minUptime = _duration.Duration.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender5, _object$incentiveDeno, _object$incentiveAmou, _object$emissionRate, _object$startTime;
    var message = createBaseMsgCreateIncentive();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    message.sender = (_object$sender5 = object.sender) !== null && _object$sender5 !== void 0 ? _object$sender5 : "";
    message.incentiveDenom = (_object$incentiveDeno = object.incentiveDenom) !== null && _object$incentiveDeno !== void 0 ? _object$incentiveDeno : "";
    message.incentiveAmount = (_object$incentiveAmou = object.incentiveAmount) !== null && _object$incentiveAmou !== void 0 ? _object$incentiveAmou : "";
    message.emissionRate = (_object$emissionRate = object.emissionRate) !== null && _object$emissionRate !== void 0 ? _object$emissionRate : "";
    message.startTime = (_object$startTime = object.startTime) !== null && _object$startTime !== void 0 ? _object$startTime : undefined;
    message.minUptime = object.minUptime !== undefined && object.minUptime !== null ? _duration.Duration.fromPartial(object.minUptime) : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      poolId: _helpers.Long.fromString(object.pool_id),
      sender: object.sender,
      incentiveDenom: object.incentive_denom,
      incentiveAmount: object.incentive_amount,
      emissionRate: object.emission_rate,
      startTime: object !== null && object !== void 0 && object.start_time ? _timestamp.Timestamp.fromAmino(object.start_time) : undefined,
      minUptime: object !== null && object !== void 0 && object.min_uptime ? _duration.Duration.fromAmino(object.min_uptime) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.pool_id = message.poolId ? message.poolId.toString() : undefined;
    obj.sender = message.sender;
    obj.incentive_denom = message.incentiveDenom;
    obj.incentive_amount = message.incentiveAmount;
    obj.emission_rate = message.emissionRate;
    obj.start_time = message.startTime ? _timestamp.Timestamp.toAmino(message.startTime) : undefined;
    obj.min_uptime = message.minUptime ? _duration.Duration.toAmino(message.minUptime) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCreateIncentive.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/create-incentive",
      value: MsgCreateIncentive.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCreateIncentive.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCreateIncentive.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreateIncentive",
      value: MsgCreateIncentive.encode(message).finish()
    };
  }
};
exports.MsgCreateIncentive = MsgCreateIncentive;
function createBaseMsgCreateIncentiveResponse() {
  return {
    incentiveDenom: "",
    incentiveAmount: "",
    emissionRate: "",
    startTime: undefined,
    minUptime: undefined
  };
}
var MsgCreateIncentiveResponse = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreateIncentiveResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.incentiveDenom !== "") {
      writer.uint32(10).string(message.incentiveDenom);
    }
    if (message.incentiveAmount !== "") {
      writer.uint32(18).string(message.incentiveAmount);
    }
    if (message.emissionRate !== "") {
      writer.uint32(26).string(message.emissionRate);
    }
    if (message.startTime !== undefined) {
      _timestamp.Timestamp.encode((0, _helpers.toTimestamp)(message.startTime), writer.uint32(34).fork()).ldelim();
    }
    if (message.minUptime !== undefined) {
      _duration.Duration.encode(message.minUptime, writer.uint32(42).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreateIncentiveResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.incentiveDenom = reader.string();
          break;
        case 2:
          message.incentiveAmount = reader.string();
          break;
        case 3:
          message.emissionRate = reader.string();
          break;
        case 4:
          message.startTime = (0, _helpers.fromTimestamp)(_timestamp.Timestamp.decode(reader, reader.uint32()));
          break;
        case 5:
          message.minUptime = _duration.Duration.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$incentiveDeno2, _object$incentiveAmou2, _object$emissionRate2, _object$startTime2;
    var message = createBaseMsgCreateIncentiveResponse();
    message.incentiveDenom = (_object$incentiveDeno2 = object.incentiveDenom) !== null && _object$incentiveDeno2 !== void 0 ? _object$incentiveDeno2 : "";
    message.incentiveAmount = (_object$incentiveAmou2 = object.incentiveAmount) !== null && _object$incentiveAmou2 !== void 0 ? _object$incentiveAmou2 : "";
    message.emissionRate = (_object$emissionRate2 = object.emissionRate) !== null && _object$emissionRate2 !== void 0 ? _object$emissionRate2 : "";
    message.startTime = (_object$startTime2 = object.startTime) !== null && _object$startTime2 !== void 0 ? _object$startTime2 : undefined;
    message.minUptime = object.minUptime !== undefined && object.minUptime !== null ? _duration.Duration.fromPartial(object.minUptime) : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      incentiveDenom: object.incentive_denom,
      incentiveAmount: object.incentive_amount,
      emissionRate: object.emission_rate,
      startTime: object !== null && object !== void 0 && object.start_time ? _timestamp.Timestamp.fromAmino(object.start_time) : undefined,
      minUptime: object !== null && object !== void 0 && object.min_uptime ? _duration.Duration.fromAmino(object.min_uptime) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.incentive_denom = message.incentiveDenom;
    obj.incentive_amount = message.incentiveAmount;
    obj.emission_rate = message.emissionRate;
    obj.start_time = message.startTime ? _timestamp.Timestamp.toAmino(message.startTime) : undefined;
    obj.min_uptime = message.minUptime ? _duration.Duration.toAmino(message.minUptime) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgCreateIncentiveResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/create-incentive-response",
      value: MsgCreateIncentiveResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgCreateIncentiveResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgCreateIncentiveResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgCreateIncentiveResponse",
      value: MsgCreateIncentiveResponse.encode(message).finish()
    };
  }
};
exports.MsgCreateIncentiveResponse = MsgCreateIncentiveResponse;
function createBaseMsgFungifyChargedPositions() {
  return {
    positionIds: [],
    sender: ""
  };
}
var MsgFungifyChargedPositions = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositions",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    writer.uint32(10).fork();
    var _iterator5 = _createForOfIteratorHelper(message.positionIds),
      _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var v = _step5.value;
        writer.uint64(v);
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    writer.ldelim();
    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgFungifyChargedPositions();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.positionIds.push(reader.uint64());
            }
          } else {
            message.positionIds.push(reader.uint64());
          }
          break;
        case 2:
          message.sender = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$positionIds3, _object$sender6;
    var message = createBaseMsgFungifyChargedPositions();
    message.positionIds = ((_object$positionIds3 = object.positionIds) === null || _object$positionIds3 === void 0 ? void 0 : _object$positionIds3.map(function (e) {
      return _helpers.Long.fromValue(e);
    })) || [];
    message.sender = (_object$sender6 = object.sender) !== null && _object$sender6 !== void 0 ? _object$sender6 : "";
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      positionIds: Array.isArray(object === null || object === void 0 ? void 0 : object.position_ids) ? object.position_ids.map(function (e) {
        return e;
      }) : [],
      sender: object.sender
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    if (message.positionIds) {
      obj.position_ids = message.positionIds.map(function (e) {
        return e;
      });
    } else {
      obj.position_ids = [];
    }
    obj.sender = message.sender;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgFungifyChargedPositions.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/fungify-charged-positions",
      value: MsgFungifyChargedPositions.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgFungifyChargedPositions.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgFungifyChargedPositions.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositions",
      value: MsgFungifyChargedPositions.encode(message).finish()
    };
  }
};
exports.MsgFungifyChargedPositions = MsgFungifyChargedPositions;
function createBaseMsgFungifyChargedPositionsResponse() {
  return {
    newPositionId: _helpers.Long.UZERO
  };
}
var MsgFungifyChargedPositionsResponse = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositionsResponse",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.newPositionId.isZero()) {
      writer.uint32(8).uint64(message.newPositionId);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgFungifyChargedPositionsResponse();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.newPositionId = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseMsgFungifyChargedPositionsResponse();
    message.newPositionId = object.newPositionId !== undefined && object.newPositionId !== null ? _helpers.Long.fromValue(object.newPositionId) : _helpers.Long.UZERO;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      newPositionId: _helpers.Long.fromString(object.new_position_id)
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.new_position_id = message.newPositionId ? message.newPositionId.toString() : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MsgFungifyChargedPositionsResponse.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/fungify-charged-positions-response",
      value: MsgFungifyChargedPositionsResponse.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MsgFungifyChargedPositionsResponse.decode(message.value);
  },
  toProto: function toProto(message) {
    return MsgFungifyChargedPositionsResponse.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.MsgFungifyChargedPositionsResponse",
      value: MsgFungifyChargedPositionsResponse.encode(message).finish()
    };
  }
};
exports.MsgFungifyChargedPositionsResponse = MsgFungifyChargedPositionsResponse;