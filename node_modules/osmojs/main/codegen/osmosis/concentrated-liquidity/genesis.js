"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PoolI_ToAmino = exports.PoolI_InterfaceDecoder = exports.PoolI_FromAmino = exports.PoolData = exports.GenesisState = exports.FullTick = exports.AccumObject = void 0;
var _tickInfo = require("./tickInfo");
var _any = require("../../google/protobuf/any");
var _incentive_record = require("./incentive_record");
var _params = require("./params");
var _position = require("./position");
var _accum = require("../accum/v1beta1/accum");
var _pool = require("./pool");
var _pool2 = require("../cosmwasmpool/v1beta1/model/pool");
var _balancerPool = require("../gamm/pool-models/balancer/balancerPool");
var _stableswap_pool = require("../gamm/pool-models/stableswap/stableswap_pool");
var _helpers = require("../../helpers");
var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function createBaseFullTick() {
  return {
    poolId: _helpers.Long.UZERO,
    tickIndex: _helpers.Long.ZERO,
    info: undefined
  };
}
var FullTick = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.FullTick",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }
    if (!message.tickIndex.isZero()) {
      writer.uint32(16).int64(message.tickIndex);
    }
    if (message.info !== undefined) {
      _tickInfo.TickInfo.encode(message.info, writer.uint32(26).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseFullTick();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;
        case 2:
          message.tickIndex = reader.int64();
          break;
        case 3:
          message.info = _tickInfo.TickInfo.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseFullTick();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    message.tickIndex = object.tickIndex !== undefined && object.tickIndex !== null ? _helpers.Long.fromValue(object.tickIndex) : _helpers.Long.ZERO;
    message.info = object.info !== undefined && object.info !== null ? _tickInfo.TickInfo.fromPartial(object.info) : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      poolId: _helpers.Long.fromString(object.pool_id),
      tickIndex: _helpers.Long.fromString(object.tick_index),
      info: object !== null && object !== void 0 && object.info ? _tickInfo.TickInfo.fromAmino(object.info) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.pool_id = message.poolId ? message.poolId.toString() : undefined;
    obj.tick_index = message.tickIndex ? message.tickIndex.toString() : undefined;
    obj.info = message.info ? _tickInfo.TickInfo.toAmino(message.info) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return FullTick.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/full-tick",
      value: FullTick.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return FullTick.decode(message.value);
  },
  toProto: function toProto(message) {
    return FullTick.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.FullTick",
      value: FullTick.encode(message).finish()
    };
  }
};
exports.FullTick = FullTick;
function createBasePoolData() {
  return {
    pool: undefined,
    ticks: [],
    feeAccumulator: undefined,
    incentivesAccumulators: [],
    incentiveRecords: []
  };
}
var PoolData = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.PoolData",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.pool !== undefined) {
      _any.Any.encode(message.pool, writer.uint32(10).fork()).ldelim();
    }
    var _iterator = _createForOfIteratorHelper(message.ticks),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var v = _step.value;
        FullTick.encode(v, writer.uint32(18).fork()).ldelim();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    if (message.feeAccumulator !== undefined) {
      AccumObject.encode(message.feeAccumulator, writer.uint32(26).fork()).ldelim();
    }
    var _iterator2 = _createForOfIteratorHelper(message.incentivesAccumulators),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _v = _step2.value;
        AccumObject.encode(_v, writer.uint32(34).fork()).ldelim();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    var _iterator3 = _createForOfIteratorHelper(message.incentiveRecords),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var _v2 = _step3.value;
        _incentive_record.IncentiveRecord.encode(_v2, writer.uint32(42).fork()).ldelim();
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBasePoolData();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.pool = PoolI_InterfaceDecoder(reader);
          break;
        case 2:
          message.ticks.push(FullTick.decode(reader, reader.uint32()));
          break;
        case 3:
          message.feeAccumulator = AccumObject.decode(reader, reader.uint32());
          break;
        case 4:
          message.incentivesAccumulators.push(AccumObject.decode(reader, reader.uint32()));
          break;
        case 5:
          message.incentiveRecords.push(_incentive_record.IncentiveRecord.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$ticks, _object$incentivesAcc, _object$incentiveReco;
    var message = createBasePoolData();
    message.pool = object.pool !== undefined && object.pool !== null ? _any.Any.fromPartial(object.pool) : undefined;
    message.ticks = ((_object$ticks = object.ticks) === null || _object$ticks === void 0 ? void 0 : _object$ticks.map(function (e) {
      return FullTick.fromPartial(e);
    })) || [];
    message.feeAccumulator = object.feeAccumulator !== undefined && object.feeAccumulator !== null ? AccumObject.fromPartial(object.feeAccumulator) : undefined;
    message.incentivesAccumulators = ((_object$incentivesAcc = object.incentivesAccumulators) === null || _object$incentivesAcc === void 0 ? void 0 : _object$incentivesAcc.map(function (e) {
      return AccumObject.fromPartial(e);
    })) || [];
    message.incentiveRecords = ((_object$incentiveReco = object.incentiveRecords) === null || _object$incentiveReco === void 0 ? void 0 : _object$incentiveReco.map(function (e) {
      return _incentive_record.IncentiveRecord.fromPartial(e);
    })) || [];
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      pool: object !== null && object !== void 0 && object.pool ? PoolI_FromAmino(object.pool) : undefined,
      ticks: Array.isArray(object === null || object === void 0 ? void 0 : object.ticks) ? object.ticks.map(function (e) {
        return FullTick.fromAmino(e);
      }) : [],
      feeAccumulator: object !== null && object !== void 0 && object.fee_accumulator ? AccumObject.fromAmino(object.fee_accumulator) : undefined,
      incentivesAccumulators: Array.isArray(object === null || object === void 0 ? void 0 : object.incentives_accumulators) ? object.incentives_accumulators.map(function (e) {
        return AccumObject.fromAmino(e);
      }) : [],
      incentiveRecords: Array.isArray(object === null || object === void 0 ? void 0 : object.incentive_records) ? object.incentive_records.map(function (e) {
        return _incentive_record.IncentiveRecord.fromAmino(e);
      }) : []
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.pool = message.pool ? PoolI_ToAmino(message.pool) : undefined;
    if (message.ticks) {
      obj.ticks = message.ticks.map(function (e) {
        return e ? FullTick.toAmino(e) : undefined;
      });
    } else {
      obj.ticks = [];
    }
    obj.fee_accumulator = message.feeAccumulator ? AccumObject.toAmino(message.feeAccumulator) : undefined;
    if (message.incentivesAccumulators) {
      obj.incentives_accumulators = message.incentivesAccumulators.map(function (e) {
        return e ? AccumObject.toAmino(e) : undefined;
      });
    } else {
      obj.incentives_accumulators = [];
    }
    if (message.incentiveRecords) {
      obj.incentive_records = message.incentiveRecords.map(function (e) {
        return e ? _incentive_record.IncentiveRecord.toAmino(e) : undefined;
      });
    } else {
      obj.incentive_records = [];
    }
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return PoolData.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/pool-data",
      value: PoolData.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return PoolData.decode(message.value);
  },
  toProto: function toProto(message) {
    return PoolData.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.PoolData",
      value: PoolData.encode(message).finish()
    };
  }
};
exports.PoolData = PoolData;
function createBaseGenesisState() {
  return {
    params: undefined,
    poolData: [],
    positions: [],
    nextPositionId: _helpers.Long.UZERO
  };
}
var GenesisState = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.GenesisState",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.params !== undefined) {
      _params.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
    }
    var _iterator4 = _createForOfIteratorHelper(message.poolData),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var v = _step4.value;
        PoolData.encode(v, writer.uint32(18).fork()).ldelim();
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    var _iterator5 = _createForOfIteratorHelper(message.positions),
      _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var _v3 = _step5.value;
        _position.Position.encode(_v3, writer.uint32(26).fork()).ldelim();
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    if (!message.nextPositionId.isZero()) {
      writer.uint32(32).uint64(message.nextPositionId);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseGenesisState();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.params = _params.Params.decode(reader, reader.uint32());
          break;
        case 2:
          message.poolData.push(PoolData.decode(reader, reader.uint32()));
          break;
        case 3:
          message.positions.push(_position.Position.decode(reader, reader.uint32()));
          break;
        case 4:
          message.nextPositionId = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$poolData, _object$positions;
    var message = createBaseGenesisState();
    message.params = object.params !== undefined && object.params !== null ? _params.Params.fromPartial(object.params) : undefined;
    message.poolData = ((_object$poolData = object.poolData) === null || _object$poolData === void 0 ? void 0 : _object$poolData.map(function (e) {
      return PoolData.fromPartial(e);
    })) || [];
    message.positions = ((_object$positions = object.positions) === null || _object$positions === void 0 ? void 0 : _object$positions.map(function (e) {
      return _position.Position.fromPartial(e);
    })) || [];
    message.nextPositionId = object.nextPositionId !== undefined && object.nextPositionId !== null ? _helpers.Long.fromValue(object.nextPositionId) : _helpers.Long.UZERO;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      params: object !== null && object !== void 0 && object.params ? _params.Params.fromAmino(object.params) : undefined,
      poolData: Array.isArray(object === null || object === void 0 ? void 0 : object.pool_data) ? object.pool_data.map(function (e) {
        return PoolData.fromAmino(e);
      }) : [],
      positions: Array.isArray(object === null || object === void 0 ? void 0 : object.positions) ? object.positions.map(function (e) {
        return _position.Position.fromAmino(e);
      }) : [],
      nextPositionId: _helpers.Long.fromString(object.next_position_id)
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.params = message.params ? _params.Params.toAmino(message.params) : undefined;
    if (message.poolData) {
      obj.pool_data = message.poolData.map(function (e) {
        return e ? PoolData.toAmino(e) : undefined;
      });
    } else {
      obj.pool_data = [];
    }
    if (message.positions) {
      obj.positions = message.positions.map(function (e) {
        return e ? _position.Position.toAmino(e) : undefined;
      });
    } else {
      obj.positions = [];
    }
    obj.next_position_id = message.nextPositionId ? message.nextPositionId.toString() : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return GenesisState.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/genesis-state",
      value: GenesisState.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return GenesisState.decode(message.value);
  },
  toProto: function toProto(message) {
    return GenesisState.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.GenesisState",
      value: GenesisState.encode(message).finish()
    };
  }
};
exports.GenesisState = GenesisState;
function createBaseAccumObject() {
  return {
    name: "",
    accumContent: undefined
  };
}
var AccumObject = {
  typeUrl: "/osmosis.concentratedliquidity.v1beta1.AccumObject",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    if (message.accumContent !== undefined) {
      _accum.AccumulatorContent.encode(message.accumContent, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseAccumObject();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.name = reader.string();
          break;
        case 2:
          message.accumContent = _accum.AccumulatorContent.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$name;
    var message = createBaseAccumObject();
    message.name = (_object$name = object.name) !== null && _object$name !== void 0 ? _object$name : "";
    message.accumContent = object.accumContent !== undefined && object.accumContent !== null ? _accum.AccumulatorContent.fromPartial(object.accumContent) : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      name: object.name,
      accumContent: object !== null && object !== void 0 && object.accum_content ? _accum.AccumulatorContent.fromAmino(object.accum_content) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.name = message.name;
    obj.accum_content = message.accumContent ? _accum.AccumulatorContent.toAmino(message.accumContent) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return AccumObject.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/concentratedliquidity/accum-object",
      value: AccumObject.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return AccumObject.decode(message.value);
  },
  toProto: function toProto(message) {
    return AccumObject.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.concentratedliquidity.v1beta1.AccumObject",
      value: AccumObject.encode(message).finish()
    };
  }
};
exports.AccumObject = AccumObject;
var PoolI_InterfaceDecoder = function PoolI_InterfaceDecoder(input) {
  var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
  var data = _any.Any.decode(reader, reader.uint32());
  switch (data.typeUrl) {
    case "/osmosis.concentratedliquidity.v1beta1.Pool":
      return _pool.Pool.decode(data.value);
    case "/osmosis.cosmwasmpool.v1beta1.CosmWasmPool":
      return _pool2.CosmWasmPool.decode(data.value);
    case "/osmosis.gamm.v1beta1.Pool":
      return _balancerPool.Pool.decode(data.value);
    case "/osmosis.gamm.poolmodels.stableswap.v1beta1.Pool":
      return _stableswap_pool.Pool.decode(data.value);
    default:
      return data;
  }
};
exports.PoolI_InterfaceDecoder = PoolI_InterfaceDecoder;
var PoolI_FromAmino = function PoolI_FromAmino(content) {
  switch (content.type) {
    case "osmosis/concentratedliquidity/pool":
      return _any.Any.fromPartial({
        typeUrl: "/osmosis.concentratedliquidity.v1beta1.Pool",
        value: _pool.Pool.encode(_pool.Pool.fromPartial(_pool.Pool.fromAmino(content.value))).finish()
      });
    case "osmosis/cosmwasmpool/cosm-wasm-pool":
      return _any.Any.fromPartial({
        typeUrl: "/osmosis.cosmwasmpool.v1beta1.CosmWasmPool",
        value: _pool2.CosmWasmPool.encode(_pool2.CosmWasmPool.fromPartial(_pool2.CosmWasmPool.fromAmino(content.value))).finish()
      });
    case "osmosis/gamm/BalancerPool":
      return _any.Any.fromPartial({
        typeUrl: "/osmosis.gamm.v1beta1.Pool",
        value: _balancerPool.Pool.encode(_balancerPool.Pool.fromPartial(_balancerPool.Pool.fromAmino(content.value))).finish()
      });
    case "osmosis/gamm/StableswapPool":
      return _any.Any.fromPartial({
        typeUrl: "/osmosis.gamm.poolmodels.stableswap.v1beta1.Pool",
        value: _stableswap_pool.Pool.encode(_stableswap_pool.Pool.fromPartial(_stableswap_pool.Pool.fromAmino(content.value))).finish()
      });
    default:
      return _any.Any.fromAmino(content);
  }
};
exports.PoolI_FromAmino = PoolI_FromAmino;
var PoolI_ToAmino = function PoolI_ToAmino(content) {
  switch (content.typeUrl) {
    case "/osmosis.concentratedliquidity.v1beta1.Pool":
      return {
        type: "osmosis/concentratedliquidity/pool",
        value: _pool.Pool.toAmino(_pool.Pool.decode(content.value))
      };
    case "/osmosis.cosmwasmpool.v1beta1.CosmWasmPool":
      return {
        type: "osmosis/cosmwasmpool/cosm-wasm-pool",
        value: _pool2.CosmWasmPool.toAmino(_pool2.CosmWasmPool.decode(content.value))
      };
    case "/osmosis.gamm.v1beta1.Pool":
      return {
        type: "osmosis/gamm/BalancerPool",
        value: _balancerPool.Pool.toAmino(_balancerPool.Pool.decode(content.value))
      };
    case "/osmosis.gamm.poolmodels.stableswap.v1beta1.Pool":
      return {
        type: "osmosis/gamm/StableswapPool",
        value: _stableswap_pool.Pool.toAmino(_stableswap_pool.Pool.decode(content.value))
      };
    default:
      return _any.Any.toAmino(content);
  }
};
exports.PoolI_ToAmino = PoolI_ToAmino;