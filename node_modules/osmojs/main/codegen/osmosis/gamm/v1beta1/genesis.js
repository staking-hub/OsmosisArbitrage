"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PoolI_ToAmino = exports.PoolI_InterfaceDecoder = exports.PoolI_FromAmino = exports.Params = exports.MigrationRecords = exports.GenesisState = exports.BalancerToConcentratedPoolLink = void 0;
var _coin = require("../../../cosmos/base/v1beta1/coin");
var _any = require("../../../google/protobuf/any");
var _pool = require("../../concentrated-liquidity/pool");
var _pool2 = require("../../cosmwasmpool/v1beta1/model/pool");
var _balancerPool = require("../pool-models/balancer/balancerPool");
var _stableswap_pool = require("../pool-models/stableswap/stableswap_pool");
var _helpers = require("../../../helpers");
var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function createBaseParams() {
  return {
    poolCreationFee: []
  };
}
var Params = {
  typeUrl: "/osmosis.gamm.v1beta1.Params",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    var _iterator = _createForOfIteratorHelper(message.poolCreationFee),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var v = _step.value;
        _coin.Coin.encode(v, writer.uint32(10).fork()).ldelim();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseParams();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.poolCreationFee.push(_coin.Coin.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$poolCreationF;
    var message = createBaseParams();
    message.poolCreationFee = ((_object$poolCreationF = object.poolCreationFee) === null || _object$poolCreationF === void 0 ? void 0 : _object$poolCreationF.map(function (e) {
      return _coin.Coin.fromPartial(e);
    })) || [];
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      poolCreationFee: Array.isArray(object === null || object === void 0 ? void 0 : object.pool_creation_fee) ? object.pool_creation_fee.map(function (e) {
        return _coin.Coin.fromAmino(e);
      }) : []
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    if (message.poolCreationFee) {
      obj.pool_creation_fee = message.poolCreationFee.map(function (e) {
        return e ? _coin.Coin.toAmino(e) : undefined;
      });
    } else {
      obj.pool_creation_fee = [];
    }
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return Params.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/gamm/params",
      value: Params.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return Params.decode(message.value);
  },
  toProto: function toProto(message) {
    return Params.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.gamm.v1beta1.Params",
      value: Params.encode(message).finish()
    };
  }
};
exports.Params = Params;
function createBaseGenesisState() {
  return {
    pools: [],
    nextPoolNumber: _helpers.Long.UZERO,
    params: undefined,
    migrationRecords: undefined
  };
}
var GenesisState = {
  typeUrl: "/osmosis.gamm.v1beta1.GenesisState",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    var _iterator2 = _createForOfIteratorHelper(message.pools),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var v = _step2.value;
        _any.Any.encode(v, writer.uint32(10).fork()).ldelim();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    if (!message.nextPoolNumber.isZero()) {
      writer.uint32(16).uint64(message.nextPoolNumber);
    }
    if (message.params !== undefined) {
      Params.encode(message.params, writer.uint32(26).fork()).ldelim();
    }
    if (message.migrationRecords !== undefined) {
      MigrationRecords.encode(message.migrationRecords, writer.uint32(34).fork()).ldelim();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseGenesisState();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.pools.push(PoolI_InterfaceDecoder(reader));
          break;
        case 2:
          message.nextPoolNumber = reader.uint64();
          break;
        case 3:
          message.params = Params.decode(reader, reader.uint32());
          break;
        case 4:
          message.migrationRecords = MigrationRecords.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$pools;
    var message = createBaseGenesisState();
    message.pools = ((_object$pools = object.pools) === null || _object$pools === void 0 ? void 0 : _object$pools.map(function (e) {
      return _any.Any.fromPartial(e);
    })) || [];
    message.nextPoolNumber = object.nextPoolNumber !== undefined && object.nextPoolNumber !== null ? _helpers.Long.fromValue(object.nextPoolNumber) : _helpers.Long.UZERO;
    message.params = object.params !== undefined && object.params !== null ? Params.fromPartial(object.params) : undefined;
    message.migrationRecords = object.migrationRecords !== undefined && object.migrationRecords !== null ? MigrationRecords.fromPartial(object.migrationRecords) : undefined;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      pools: Array.isArray(object === null || object === void 0 ? void 0 : object.pools) ? object.pools.map(function (e) {
        return PoolI_FromAmino(e);
      }) : [],
      nextPoolNumber: _helpers.Long.fromString(object.next_pool_number),
      params: object !== null && object !== void 0 && object.params ? Params.fromAmino(object.params) : undefined,
      migrationRecords: object !== null && object !== void 0 && object.migration_records ? MigrationRecords.fromAmino(object.migration_records) : undefined
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    if (message.pools) {
      obj.pools = message.pools.map(function (e) {
        return e ? PoolI_ToAmino(e) : undefined;
      });
    } else {
      obj.pools = [];
    }
    obj.next_pool_number = message.nextPoolNumber ? message.nextPoolNumber.toString() : undefined;
    obj.params = message.params ? Params.toAmino(message.params) : undefined;
    obj.migration_records = message.migrationRecords ? MigrationRecords.toAmino(message.migrationRecords) : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return GenesisState.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/gamm/genesis-state",
      value: GenesisState.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return GenesisState.decode(message.value);
  },
  toProto: function toProto(message) {
    return GenesisState.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.gamm.v1beta1.GenesisState",
      value: GenesisState.encode(message).finish()
    };
  }
};
exports.GenesisState = GenesisState;
function createBaseMigrationRecords() {
  return {
    balancerToConcentratedPoolLinks: []
  };
}
var MigrationRecords = {
  typeUrl: "/osmosis.gamm.v1beta1.MigrationRecords",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    var _iterator3 = _createForOfIteratorHelper(message.balancerToConcentratedPoolLinks),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var v = _step3.value;
        BalancerToConcentratedPoolLink.encode(v, writer.uint32(10).fork()).ldelim();
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMigrationRecords();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.balancerToConcentratedPoolLinks.push(BalancerToConcentratedPoolLink.decode(reader, reader.uint32()));
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$balancerToCon;
    var message = createBaseMigrationRecords();
    message.balancerToConcentratedPoolLinks = ((_object$balancerToCon = object.balancerToConcentratedPoolLinks) === null || _object$balancerToCon === void 0 ? void 0 : _object$balancerToCon.map(function (e) {
      return BalancerToConcentratedPoolLink.fromPartial(e);
    })) || [];
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      balancerToConcentratedPoolLinks: Array.isArray(object === null || object === void 0 ? void 0 : object.balancer_to_concentrated_pool_links) ? object.balancer_to_concentrated_pool_links.map(function (e) {
        return BalancerToConcentratedPoolLink.fromAmino(e);
      }) : []
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    if (message.balancerToConcentratedPoolLinks) {
      obj.balancer_to_concentrated_pool_links = message.balancerToConcentratedPoolLinks.map(function (e) {
        return e ? BalancerToConcentratedPoolLink.toAmino(e) : undefined;
      });
    } else {
      obj.balancer_to_concentrated_pool_links = [];
    }
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return MigrationRecords.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/gamm/migration-records",
      value: MigrationRecords.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return MigrationRecords.decode(message.value);
  },
  toProto: function toProto(message) {
    return MigrationRecords.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.gamm.v1beta1.MigrationRecords",
      value: MigrationRecords.encode(message).finish()
    };
  }
};
exports.MigrationRecords = MigrationRecords;
function createBaseBalancerToConcentratedPoolLink() {
  return {
    balancerPoolId: _helpers.Long.UZERO,
    clPoolId: _helpers.Long.UZERO
  };
}
var BalancerToConcentratedPoolLink = {
  typeUrl: "/osmosis.gamm.v1beta1.BalancerToConcentratedPoolLink",
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();
    if (!message.balancerPoolId.isZero()) {
      writer.uint32(8).uint64(message.balancerPoolId);
    }
    if (!message.clPoolId.isZero()) {
      writer.uint32(16).uint64(message.clPoolId);
    }
    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseBalancerToConcentratedPoolLink();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.balancerPoolId = reader.uint64();
          break;
        case 2:
          message.clPoolId = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial: function fromPartial(object) {
    var message = createBaseBalancerToConcentratedPoolLink();
    message.balancerPoolId = object.balancerPoolId !== undefined && object.balancerPoolId !== null ? _helpers.Long.fromValue(object.balancerPoolId) : _helpers.Long.UZERO;
    message.clPoolId = object.clPoolId !== undefined && object.clPoolId !== null ? _helpers.Long.fromValue(object.clPoolId) : _helpers.Long.UZERO;
    return message;
  },
  fromAmino: function fromAmino(object) {
    return {
      balancerPoolId: _helpers.Long.fromString(object.balancer_pool_id),
      clPoolId: _helpers.Long.fromString(object.cl_pool_id)
    };
  },
  toAmino: function toAmino(message) {
    var obj = {};
    obj.balancer_pool_id = message.balancerPoolId ? message.balancerPoolId.toString() : undefined;
    obj.cl_pool_id = message.clPoolId ? message.clPoolId.toString() : undefined;
    return obj;
  },
  fromAminoMsg: function fromAminoMsg(object) {
    return BalancerToConcentratedPoolLink.fromAmino(object.value);
  },
  toAminoMsg: function toAminoMsg(message) {
    return {
      type: "osmosis/gamm/balancer-to-concentrated-pool-link",
      value: BalancerToConcentratedPoolLink.toAmino(message)
    };
  },
  fromProtoMsg: function fromProtoMsg(message) {
    return BalancerToConcentratedPoolLink.decode(message.value);
  },
  toProto: function toProto(message) {
    return BalancerToConcentratedPoolLink.encode(message).finish();
  },
  toProtoMsg: function toProtoMsg(message) {
    return {
      typeUrl: "/osmosis.gamm.v1beta1.BalancerToConcentratedPoolLink",
      value: BalancerToConcentratedPoolLink.encode(message).finish()
    };
  }
};
exports.BalancerToConcentratedPoolLink = BalancerToConcentratedPoolLink;
var PoolI_InterfaceDecoder = function PoolI_InterfaceDecoder(input) {
  var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
  var data = _any.Any.decode(reader, reader.uint32());
  switch (data.typeUrl) {
    case "/osmosis.concentratedliquidity.v1beta1.Pool":
      return _pool.Pool.decode(data.value);
    case "/osmosis.cosmwasmpool.v1beta1.CosmWasmPool":
      return _pool2.CosmWasmPool.decode(data.value);
    case "/osmosis.gamm.v1beta1.Pool":
      return _balancerPool.Pool.decode(data.value);
    case "/osmosis.gamm.poolmodels.stableswap.v1beta1.Pool":
      return _stableswap_pool.Pool.decode(data.value);
    default:
      return data;
  }
};
exports.PoolI_InterfaceDecoder = PoolI_InterfaceDecoder;
var PoolI_FromAmino = function PoolI_FromAmino(content) {
  switch (content.type) {
    case "osmosis/concentratedliquidity/pool":
      return _any.Any.fromPartial({
        typeUrl: "/osmosis.concentratedliquidity.v1beta1.Pool",
        value: _pool.Pool.encode(_pool.Pool.fromPartial(_pool.Pool.fromAmino(content.value))).finish()
      });
    case "osmosis/cosmwasmpool/cosm-wasm-pool":
      return _any.Any.fromPartial({
        typeUrl: "/osmosis.cosmwasmpool.v1beta1.CosmWasmPool",
        value: _pool2.CosmWasmPool.encode(_pool2.CosmWasmPool.fromPartial(_pool2.CosmWasmPool.fromAmino(content.value))).finish()
      });
    case "osmosis/gamm/BalancerPool":
      return _any.Any.fromPartial({
        typeUrl: "/osmosis.gamm.v1beta1.Pool",
        value: _balancerPool.Pool.encode(_balancerPool.Pool.fromPartial(_balancerPool.Pool.fromAmino(content.value))).finish()
      });
    case "osmosis/gamm/StableswapPool":
      return _any.Any.fromPartial({
        typeUrl: "/osmosis.gamm.poolmodels.stableswap.v1beta1.Pool",
        value: _stableswap_pool.Pool.encode(_stableswap_pool.Pool.fromPartial(_stableswap_pool.Pool.fromAmino(content.value))).finish()
      });
    default:
      return _any.Any.fromAmino(content);
  }
};
exports.PoolI_FromAmino = PoolI_FromAmino;
var PoolI_ToAmino = function PoolI_ToAmino(content) {
  switch (content.typeUrl) {
    case "/osmosis.concentratedliquidity.v1beta1.Pool":
      return {
        type: "osmosis/concentratedliquidity/pool",
        value: _pool.Pool.toAmino(_pool.Pool.decode(content.value))
      };
    case "/osmosis.cosmwasmpool.v1beta1.CosmWasmPool":
      return {
        type: "osmosis/cosmwasmpool/cosm-wasm-pool",
        value: _pool2.CosmWasmPool.toAmino(_pool2.CosmWasmPool.decode(content.value))
      };
    case "/osmosis.gamm.v1beta1.Pool":
      return {
        type: "osmosis/gamm/BalancerPool",
        value: _balancerPool.Pool.toAmino(_balancerPool.Pool.decode(content.value))
      };
    case "/osmosis.gamm.poolmodels.stableswap.v1beta1.Pool":
      return {
        type: "osmosis/gamm/StableswapPool",
        value: _stableswap_pool.Pool.toAmino(_stableswap_pool.Pool.decode(content.value))
      };
    default:
      return _any.Any.toAmino(content);
  }
};
exports.PoolI_ToAmino = PoolI_ToAmino;